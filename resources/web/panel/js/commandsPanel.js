/*
 * Copyright (C) 2016 www.phantombot.net
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* 
 * @author IllusionaryOne
 */

/*
 * customCommandsPanel.js
 * Drives the Custom Commands Panel
 */
(function() {
    var modeIcon = [],
        groupIcons = [],
        globalCooldown = "",
        modCooldown = "",
        perUserCooldown = "",
        globalCooldownTime = "",
        disabledCommands = [];

        modeIcon['false'] = "<i style=\"color: #6136b1\" class=\"fa fa-circle-o\" />";
        modeIcon['true'] = "<i style=\"color: #6136b1\" class=\"fa fa-circle\" />";

        groupIcons['0'] = "<i class=\"fa fa-television\" />";
        groupIcons['1'] = "<i class=\"fa fa-laptop\" />";
        groupIcons['2'] = "<i class=\"fa fa-shield\" />";
        groupIcons['3'] = "<i class=\"fa fa-credit-card\" />";
        groupIcons['6'] = "<i class=\"fa fa-clock-o\" />";
        groupIcons['7'] = "<i class=\"fa fa-user\" /></div>";

    /*
     * onMessage
     * This event is generated by the connection (WebSocket) object.
     */
    function onMessage(message) {
        var msgObject;

        try {
            msgObject = JSON.parse(message.data);
        } catch (ex) {
            return;
        }

        // Check for dbkeysresult queries
        if (panelHasQuery(msgObject)) {
            var commandName = "",
                commandValue = "",
                html = "<table>",
                time = "",
                foundData = false;

            if (panelCheckQuery(msgObject, 'commands_cooldown')) {
                html = "<table>";
                for (idx in msgObject['results']) {
                    commandName = msgObject['results'][idx]['key'];
                    time = msgObject['results'][idx]['value'];

                    if (panelMatch(commandName, 'globalCooldown')) {
                        globalCooldown = msgObject['results'][idx]['value'];
                        continue;
                    }
                    if (panelMatch(commandName, 'globalCooldownTime')) {
                        globalCooldownTime = msgObject['results'][idx]['value'];
                        continue;
                    }
                    if (panelMatch(commandName, 'modCooldown')) {
                        modCooldown = msgObject['results'][idx]['value'];
                        continue;
                    }
                    if (panelMatch(commandName, 'perUserCooldown')) {
                        perUserCooldown  = msgObject['results'][idx]['value'];
                        continue;
                    }

                    foundData = true;
                    html += "<tr class=\"textList\">" +
                            "    <td style=\"width: 15px\">" +
                            "        <div id=\"deleteCooldown_" + commandName + "\" class=\"button\" " +
                            "             onclick=\"$.deleteCooldown('" + commandName + "')\"><i class=\"fa fa-trash\" />" +
                            "    </td>" +
                            "    <td>" + commandName + "</td>" +
                            "    <td>" + time + "</td>" +
                            "</tr>";
                }
                html += "</table>";

                if (!foundData) {
                    html = "<i>No entries in cooldown table.</i>";
                }
                $("#cooldownList").html(html);

                $("#toggleGlobalCooldown").html(modeIcon[globalCooldown]);
                $("#togglePerUserCooldown").html(modeIcon[perUserCooldown]);
                $("#toggleModCooldown").html(modeIcon[modCooldown]);
                $('#globalCooldownTimeInput').attr('placeholder', globalCooldownTime).blur();
            }

            if (panelCheckQuery(msgObject, 'commands_commands')) {
                if (msgObject['results'].length === 0) {
                    $('#customCommandsList').html('<i>There are no custom commands defined.</i>');
                    return;
                }

                html = '<table>';
                for (var idx in msgObject['results']) {
                    commandName = msgObject['results'][idx]['key'];
                    commandValue = msgObject['results'][idx]['value'];
                    html += '<tr style="textList">' +
                            '    <td style="vertical-align: middle: width: 60%">!' + commandName + '</td>' +
                            '    <td style="vertical-align: middle">' +
                            '        <form onkeypress="return event.keyCode != 13">' +
                            '            <input style="width: 90%" type="text" id="editCommand_' + commandName + '"' +
                            '                   value="' + commandValue + '" />' +
                            '              <td type="button" onclick="$.editCustomCommand(\'' + commandName + '\')"><i class="fa fa-pencil" /> </td> ' +
                            '</form>' +
                            '            <td  type="button" id="deleteCommand_' + commandName + '" onclick="$.deleteCommand(\'' + commandName + '\')"><i class="fa fa-trash" /> </td>' +
                            '        </form>' +
                            '    </td>' +
                            '</tr>';
                }
                html += '</table>';
                $('#customCommandsList').html(html);
                handleInputFocus();
            }

            if (panelCheckQuery(msgObject, 'commands_aliases')) {
                if (msgObject['results'].length === 0) {
                    $('#aliasCommandsList').html('<i>There are no aliased commands defined.</i>');
                    return;
                }
                for (idx in msgObject['results']) {
                    commandName = msgObject['results'][idx]['key'];
                    commandValue = msgObject['results'][idx]['value'];
                    html += "<tr class=\"textList\">" +
                            "    <td padding=\"5px\">" +
                            "        <div id=\"deleteAlias_" + commandName + "\" class=\"button\" " +
                            "             onclick=\"$.deleteAlias('" + commandName + "')\"><i class=\"fa fa-trash\" />" +
                            "        </div>" +
                            "    </td>" +
                            "    <td><strong>" + commandName + "</strong></td>" +
                            "    <td>" + commandValue + "</td>" +
                            "</tr>";
                }
                html += "</table>";
                $("#aliasCommandsList").html(html);
            }

            if (panelCheckQuery(msgObject, 'commands_pricecom')) {
                if (msgObject['results'].length === 0) {
                    $('#priceCommandsList').html('<i>There are no commands with prices defined.</i>');
                    return;
                }
                for (idx in msgObject['results']) {
                    commandName = msgObject['results'][idx]['key'];
                    commandValue = msgObject['results'][idx]['value'];
                    html += "<tr class=\"textList\">" +
                            "<td style=\"vertical-align: middle\"><strong>" + commandName + "</strong></td>" +
                            "<td style=\"vertical-align: middle\">" + commandValue + "</td>" +
                            "<td style=\"vertical-align: middle\">" +
                            "    <form onkeypress=\"return event.keyCode != 13\">" +
                            "        <input type=\"number\" min=\"0\" id=\"inlineCommandPrice_"+commandName+"\" placeholder=\"new price\" />" +
                            "        <button type=\"button\" class=\"btn btn-default btn-xs\"" +
                            "                onclick=\"$.updateCommandPrice('" + commandName + "')\"><i class=\"fa fa-pencil\" /></button>" +
                            "    </form>" +
                            "</td>" +
                            "</tr>";
                }
                html += "</table>";
                $("#priceCommandsList").html(html);
                handleInputFocus();
            }

            if (panelCheckQuery(msgObject, 'commands_disabled')) {
                disabledCommands = [];
                for (idx in msgObject['results']) {
                    disabledCommands[msgObject['results'][idx]['key']] = true;
                }
                sendDBKeys("commands_permcom", "permcom");
            }

            if (panelCheckQuery(msgObject, 'commands_permcom')) {
                var commandTableData = msgObject['results'];
                commandTableData.sort(sortCommandTable);

                for (idx in commandTableData) {
                    commandName = commandTableData[idx]['key'];
                    commandValue = commandTableData[idx]['value'];
                    html += "<tr class=\"textList\">" +
                            "<td><strong>" + commandName + "</strong></td>";

                    if (commandName.indexOf(' ') === -1) {
                        if (disabledCommands[commandName] !== undefined) {
                            html +=  "<td><div id=\"commandEnabled_" + commandName + "\"" +
                                     "         data-toggle=\"tooltip\" title=\"Enable Command\" class=\"button\" onclick=\"$.commandEnable('" + commandName + "', 'enable');\">" +
                                     "    <i style=\"color: #6136b1\" class=\"fa fa-toggle-off\" /></div></td>";
                        } else {
                            html +=  "<td><div id=\"commandEnabled_" + commandName + "\"" +
                                     "         data-toggle=\"tooltip\" title=\"Disable Command\" class=\"button\" onclick=\"$.commandEnable('" + commandName + "', 'disable');\">" +
                                     "    <i style=\"color: #6136b1\" class=\"fa fa-toggle-on\" /></div></td>";
                        }
                    } else {
                        html += "<td />";
                    }

                    html += "<td /><td><div id=\"commandsList_" + commandName + "\"><strong><font style=\"color: #6136b1\">" + groupIcons[commandValue] + 
                            "    </font></strong></div></td>" +

                            "<td><div data-toggle=\"tooltip\" title=\"Set Caster\" class=\"button\" onclick=\"$.commandPermission('" + commandName + "', 0);\">" +
                            "    <i class=\"fa fa-television\" /></div></td>" +

                            "<td><div data-toggle=\"tooltip\" title=\"Set Admin\" class=\"button\" onclick=\"$.commandPermission('" + commandName + "', 1);\">" +
                            "    <i class=\"fa fa-laptop\" /></div></td>" +

                            "<td><div data-toggle=\"tooltip\" title=\"Set Mod\" class=\"button\" onclick=\"$.commandPermission('" + commandName + "', 2);\">" +
                            "    <i class=\"fa fa-shield\" /></div></td>" +

                            "<td><div data-toggle=\"tooltip\" title=\"Set Sub\" class=\"button\" onclick=\"$.commandPermission('" + commandName + "', 3);\">" +
                            "    <i class=\"fa fa-credit-card\" /></div></td>" +

                            "<td><div data-toggle=\"tooltip\" title=\"Set Regular\" class=\"button\" onclick=\"$.commandPermission('" + commandName + "', 6);\">" +
                            "    <i class=\"fa fa-clock-o\" /></div></td>" +

                            "<td><div data-toggle=\"tooltip\" title=\"Set Viewer\" class=\"button\" onclick=\"$.commandPermission('" + commandName + "', 7);\">" +
                            "    <i class=\"fa fa-user\" /></div></td>" +

                            "</tr>";
                }
                html += "</table>";
                $("#permCommandsList").html(html);
                $('[data-toggle="tooltip"]').tooltip();
            }
        }
    }

    /**
     * @function doQuery
     */
    function doQuery() {
        sendDBKeys("commands_commands", "command");
        sendDBKeys("commands_aliases", "aliases");
        sendDBKeys("commands_pricecom", "pricecom");
        sendDBKeys("commands_cooldown", "cooldown");
        sendDBKeys('commands_disabled', 'disabledCommands');
    }

    /**
     * @function sortCommandTable
     * @param {Object} a
     * @param {Object} b
     */
    function sortCommandTable(a, b) {
        return panelStrcmp(a.key, b.key);
    }

    /** 
     * @function deleteCommand
     * @param {String} command
     */
    function deleteCommand(command) {
        $("#deleteCommand_" + command).html("<i style=\"color: #6136b1\" class=\"fa fa-spinner fa-spin\" />");
        // sendDBDelete("commands_delcom_" + command, "command", command);
        sendCommand("delcom " + command);
        setTimeout(function() { doQuery(); }, TIMEOUT_WAIT_TIME);
    }

    /**
     * @function addCustomCommand
     */
    function addCustomCommand() {
    var name = $('#addCommandCommand').val();
    var commandtext = $('#addCommandText').val();

        if (name.length == 0) {
            $("#addCommandCommand").val("Please enter a value");
            setTimeout(function() { $("#addCommandCommand").val(""); }, TIMEOUT_WAIT_TIME * 2);
        }

        if (commandtext.length == 0) {
            $("#addCommandText").val("Please enter a value");
            setTimeout(function() { $("#addCommandText").val(""); }, TIMEOUT_WAIT_TIME * 2);
        }

        if (name.startsWith('!')) {
            name = name.replace('!', '');
        }

        sendDBUpdate("addCustomCommand", "command", name.toLowerCase(), commandtext);
        $('#addCommandCommand').val(""),
        $('#addCommandText').val("");
        setTimeout(function() { sendCommand("reloadcommand") }, TIMEOUT_WAIT_TIME);
        doQuery();
    }

    /**
     * @function editCustomCommand
     */
    function editCustomCommand(id) {
    var value = $('#editCommand_' + id).val();
        if (value.length > 0) {
            sendDBUpdate("addCustomCommand", "command", id.toLowerCase(), value);
            doQuery();
            setTimeout(function() { sendCommand("reloadcommand") }, TIMEOUT_WAIT_TIME);
        }
    }

    /** 
     * @function aliasCommand
     */
    function aliasCommand() {
        var main = $('#aliasCommandInput').val();
        var alias = $('#aliasCommandInputAlias').val();
        console.log(main);
        console.log(alias);

        if (main.length == 0) {
            $("#aliasCommandInput").val("Please enter a value");
            setTimeout(function() { $("#aliasCommandInput").val(""); }, TIMEOUT_WAIT_TIME * 2);
        }

        if (alias.length == 0) {
            $("#aliasCommandInputAlias").val("Please enter a value");
            setTimeout(function() { $("#aliasCommandInputAlias").val(""); }, TIMEOUT_WAIT_TIME * 2);
        }

        if (main.startsWith('!')) {
            main = main.replace('!', '');
        }

        if (alias.startsWith('!')) {
            alias = alias.replace('!', '');
        }

        sendDBUpdate("addCommandAlias", "aliases", main.toLowerCase(), alias.toLowerCase());
        $('#aliasCommandInput').val(""),
        $('#aliasCommandInputAlias').val("");
        setTimeout(function() { sendCommand("reloadcommand") }, TIMEOUT_WAIT_TIME);
        doQuery();
    }

    /**
     * @function deleteAlias
     * @param {String} command
     */
    function deleteAlias(command) {
        $("#deleteAlias_" + command).html("<i style=\"color: #6136b1\" class=\"fa fa-spinner fa-spin\" />");
        if (command.length != 0) {
            sendDBDelete("commands_delalias_" + command, "aliases", command);
        }
        doQuery();
        setTimeout(function() { sendCommand("reloadcommand") }, TIMEOUT_WAIT_TIME);
    }

    /**
     * @function commandPermission
     */
    function commandPermission(command, group) {
        $("#commandsList_" + command).html("<i style=\"color: #6136b1\" class=\"fa fa-spinner fa-spin\" />");
        if (command.length != 0 && group.length != 0) {
            sendDBUpdate("commands_permcom", "permcom", command.toLowerCase(), String(group));
        }
        doQuery();
        setTimeout(function() { sendCommand("reloadcommand") }, TIMEOUT_WAIT_TIME);
    }

    /**
     * @function setCommandPrice
     */
    function setCommandPrice() {
        var price = $("#setCommandPriceInput").val();
        var com = $("#setCommandPriceInputCommand").val();

        if (com.startsWith('!')) {
            com = com.replace('!', '');
        }

        if (price.length != 0 && com.length != 0) {
            sendDBUpdate("commandPrice", "pricecom", com.toLowerCase(), price);
            $("#setCommandPriceInput").val("");
            $("#setCommandPriceInputCommand").val("");
            doQuery();
        }
    }

    /**
     * @function updateCommandPrice
     */
    function updateCommandPrice(command) {
        var price = $("#inlineCommandPrice_" + command).val();
        if (command.length != 0 && price.length != 0) {
            sendDBUpdate("commands_pricecom", "pricecom", command.toLowerCase(), price);
            setTimeout(function() { doQuery(); }, TIMEOUT_WAIT_TIME);
            setTimeout(function() { sendCommand("reloadcommand") }, TIMEOUT_WAIT_TIME);
        }
        setTimeout(function() { $("#inlineCommandPrice_" + command).val(""); }, TIMEOUT_WAIT_TIME);
    }

    /**
     * @function toggleGlobalCooldown
     */
    function toggleGlobalCooldown() {
        $("#toggleGlobalCooldown").html("<i style=\"color: #6136b1\" class=\"fa fa-spinner fa-spin\" />");
        setTimeout(function() {
            if (globalCooldown == "true") {
                sendDBUpdate("commands_cooldown", "cooldown", "globalCooldown", "false");
            } 
            if (globalCooldown == "false") {
                sendDBUpdate("commands_cooldown", "cooldown", "globalCooldown", "true");
            }
        }, 300);
        setTimeout(function() { doQuery(); }, TIMEOUT_WAIT_TIME * 2);
        setTimeout(function() { sendCommand("reloadcooldown"); }, TIMEOUT_WAIT_TIME * 2);
    }

    /**
     * @function toggleModCooldown
     */
    function toggleModCooldown() {
        $("#toggleModCooldown").html("<i style=\"color: #6136b1\" class=\"fa fa-spinner fa-spin\" />");
        setTimeout(function() {
            if (modCooldown == "true") {
                sendDBUpdate("commands_cooldown", "cooldown", "modCooldown", "false");
            } 
            if (modCooldown == "false") {
                sendDBUpdate("commands_cooldown", "cooldown", "modCooldown", "true");
            }
        }, 300);
        setTimeout(function() { doQuery(); }, TIMEOUT_WAIT_TIME * 2);
        setTimeout(function() { sendCommand("reloadcooldown"); }, TIMEOUT_WAIT_TIME * 2);
    }

    /**
     * @function togglePerUserCooldown
     */
    function togglePerUserCooldown() {
        $("#togglePerUserCooldown").html("<i style=\"color: #6136b1\" class=\"fa fa-spinner fa-spin\" />");
        setTimeout(function() {
            if (perUserCooldown == "true") {
                sendDBUpdate("commands_cooldown", "cooldown", "perUserCooldown", "false");
            } 
            if (perUserCooldown == "false") {
                sendDBUpdate("commands_cooldown", "cooldown", "perUserCooldown", "true");
            }
        }, 300);
        setTimeout(function() { doQuery(); }, TIMEOUT_WAIT_TIME * 2);
        setTimeout(function() { sendCommand("reloadcooldown"); }, TIMEOUT_WAIT_TIME * 2);
    }


    /**
     * @function setGlobalCooldownTime
     */
    function setGlobalCooldownTime() {
        var newValue = $("#globalCooldownTimeInput").val();
        if (newValue.length > 0) {
            sendDBUpdate("commands_cooldown", "cooldown", "globalCooldownTime", String(newValue));
            $("#globalCooldownTimeInput").val('');
            $("#globalCooldownTimeInput").attr('placeholder', newValue).blur();
            setTimeout(function() { doQuery(); }, TIMEOUT_WAIT_TIME * 2);
            setTimeout(function() { sendCommand("reloadcooldown"); }, TIMEOUT_WAIT_TIME * 2);
        }
    }

    /**
     * @function deleteCooldown
     * @param {String} command
     */
    function deleteCooldown(command) {
        $("#deleteCooldown_" + command).html("<i style=\"color: #6136b1\" class=\"fa fa-spinner fa-spin\" />");
        sendDBDelete("commands_cooldown", "cooldown", command);
        setTimeout(function() { doQuery(); }, TIMEOUT_WAIT_TIME);
    }

    /**
     * @function addCooldown
     */
    function addCooldown() {
        var input = $("#cooldownCmdInput").val();
        var command = $("#cooldownCmdInputCommand").val();
        if (input.length > 0 && command.length != 0) {
            sendCommand("cooldown " + input);
            sendDBUpdate("commands_cooldown", "cooldown", String(command), String(input));
            $("#cooldownCmdInput").val("Submitted");
            $("#cooldownCmdInputCommand").val("Submitted");
            setTimeout(function() { $("#cooldownCmdInput").val(""); doQuery(); }, TIMEOUT_WAIT_TIME * 2);
            setTimeout(function() { $("#cooldownCmdInputCommand").val(""); doQuery(); }, TIMEOUT_WAIT_TIME * 2);
        }
    }

    /**
     * @function commandEnable
     * @param {String} commandName
     * @param {String} action
     */
    function commandEnable(commandName, action) {
        if (panelMatch(action, 'enable')) {
            $('#commandEnabled_' + commandName).html('<i style="color: #333333" class="fa fa-toggle-on" />');
            sendDBDelete('commands_enablecom', 'disabledCommands', commandName);
        } else {
            $('#commandEnabled_' + commandName).html('<i style="color: #333333" class="fa fa-toggle-off" />');
            sendDBUpdate('commands_enablecom', 'disabledCommands', commandName, 'true');
        }
        setTimeout(function() { doQuery(); }, TIMEOUT_WAIT_TIME);
    }

    // Import the HTML file for this panel.
    $("#commandsPanel").load("/panel/commands.html");

    // Load the DB items for this panel, wait to ensure that we are connected.
    var interval = setInterval(function() {
        if (isConnected && TABS_INITIALIZED) {
            var active = $("#tabs").tabs("option", "active");
            if (active == 1) {
                doQuery();
                clearInterval(interval); 
            }
        }
    }, INITIAL_WAIT_TIME);

    // Query the DB every 30 seconds for updates.
    setInterval(function() {
        var active = $("#tabs").tabs("option", "active");
        if (active == 1 && isConnected && !isInputFocus()) {
            newPanelAlert('Refreshing Commands Data', 'success', 1000);
            doQuery();
        }
    }, 3e4);

    // Export functions - Needed when calling from HTML.
    $.commandsOnMessage = onMessage;
    $.commandsDoQuery = doQuery;
    $.deleteCommand = deleteCommand;
    $.addCustomCommand = addCustomCommand;
    $.editCustomCommand = editCustomCommand;
    $.aliasCommand = aliasCommand;
    $.deleteAlias = deleteAlias;
    $.commandPermission = commandPermission;
    $.setCommandPrice = setCommandPrice;
    $.updateCommandPrice = updateCommandPrice;
    $.addCooldown = addCooldown;
    $.deleteCooldown = deleteCooldown;
    $.toggleGlobalCooldown = toggleGlobalCooldown;
    $.toggleModCooldown = toggleModCooldown;
    $.togglePerUserCooldown = togglePerUserCooldown;
    $.setGlobalCooldownTime = setGlobalCooldownTime;
    $.commandEnable = commandEnable;
})();
