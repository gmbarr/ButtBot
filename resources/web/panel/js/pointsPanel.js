/*
 * pointsPanel.js
 * Drives the Points Panel
 */
(function() {

    var sortType = 'alpha_asc',
        modeIcon = [];
        modeIcon['false'] = "<i class=\"fa fa-circle-o\" />";
        modeIcon['true'] = "<i class=\"fa fa-circle\" />";

    /*
     * onMessage
     * This event is generated by the connection (WebSocket) object.
     */
    function onMessage(message) {
        var msgObject,
            timezone = "GMT"; // Default time zone in Core if none given.

        try {
            msgObject = JSON.parse(message.data);
        } catch (ex) {
            return;
        }

        if (msgObject['dbkeysresult'] != undefined) {
            if (msgObject['dbkeysresult'].localeCompare('points_settings') == 0) {
                for (idx in msgObject['results']) {
                    var key = "",
                        value = "";
    
                    key = msgObject['results'][idx]['key'];
                    value = msgObject['results'][idx]['value'];
    
                    if (key.localeCompare('onlineGain') == 0) {
                        $("#setPointGainInput_setgain").attr("placeholder", value).blur();
                    } else if (key.localeCompare('offlineGain') == 0) {
                        $("#setPointGainInput_setofflinegain").attr("placeholder", value).blur();
                    } else if (key.localeCompare('onlinePayoutInterval') == 0) {
                        $("#setPointGainInput_setinterval").attr("placeholder", value).blur();
                    } else if (key.localeCompare('offlinePayoutInterval') == 0) {
                        $("#setPointGainInput_setofflineinterval").attr("placeholder", value).blur();
                    } else if (key.localeCompare('pointNameSingle') == 0) {
                        $("#setPointNameInput").attr("placeholder", value).blur();
                    } else if (key.localeCompare('pointNameMultiple') == 0) {
                        $("#setPointsNameInput").attr("placeholder", value).blur();
                    }
                }
            }

            if (msgObject['dbkeysresult'].localeCompare('points_pointstable') == 0) {
                var pointsTableData = msgObject['results'],
                    username = "",
                    points = "",
                    timeValue = "",
                    html = "";

                if (sortType.localeCompare('points_asc') == 0) {
                    pointsTableData.sort(sortPointsTable_points_asc);
                } else if (sortType.localeCompare('points_desc') == 0) {
                    pointsTableData.sort(sortPointsTable_points_desc);
                } else if (sortType.localeCompare('alpha_asc') == 0) {
                    pointsTableData.sort(sortPointsTable_alpha_asc);
                } else if (sortType.localeCompare('alpha_desc') == 0) {
                    pointsTableData.sort(sortPointsTable_alpha_desc);
                }
                
                html = "<table>";
                for (var idx = 0; idx < pointsTableData.length; idx++) {
                    username = pointsTableData[idx]['key'];
                    points = pointsTableData[idx]['value'];
                    html += "<tr class=\"textList\">" +
                            "    <td style=\"vertical-align: middle; width: 50%\">" + username + "</td>" +
                            "    <td style=\"vertical-align: middle; width: 25%\">" + points + "</td>" +
                            "    <td style=\"vertical-align: middle: width: 25%\">" +
                            "    <form onkeypress=\"return event.keyCode != 13\">" +
                            "        <input type=\"number\" min=\"0\" id=\"inlineUserPoints_" + username + "\"" +
                            "               placeholder=\"" + points + "\" value=\"" + points + "\"" +
                            "               style=\"width: 8em\"/>" +
                            "        <input type=\"button\" value=\"Update\" onclick=\"$.updateUserPoints('" + username + "')\" />" +
                            "    </form>" +
                            "</tr>";
                }
                html += "</table>";
                $("#userPointsTable").html(html);
            }
        }
    }

    /**
     * @function doQuery
     */
    function doQuery() {
        sendDBKeys("points_settings", "pointSettings");
        sendDBKeys("points_pointstable", "points");
    }

    /**
     * @function sortPointsTable
     * @param {Object} a
     * @param {Object} b
     */
    function sortPointsTable_alpha_desc(a, b) {
        var keyA = a['key'],
            keyB = b['key'];
        return keyB.localeCompare(keyA);
    }
    function sortPointsTable_alpha_asc(a, b) {
        var keyA = a['key'],
            keyB = b['key'];
        return keyA.localeCompare(keyB);
    }
    function sortPointsTable_points_asc(a, b) {
        var valA = a['value'],
            valB = b['value'];
        return parseInt(valA) - parseInt(valB);
    }
    function sortPointsTable_points_desc(a, b) {
        var valA = a['value'],
            valB = b['value'];
        return parseInt(valB) - parseInt(valA);
    }

    /**
     * @function updateUserPoints
     * @param {String} username
     */
    function updateUserPoints(username) {
        var points = $("#inlineUserPoints_" + username).val();
        if (points.length > 0) {
            $("#inlineUserPoints_" + username).val('');
            sendDBUpdate("points_pointstableUpdate", "points", username, points);
            setTimeout(function() { doQuery(); }, 500);
        }
    }

    /**
     * @function setPointName
     */
    function setPointName() {
        var singleName = $("#setPointNameInput").val(),
            pluralName = $("#setPointsNameInput").val();

        if (singleName.length > 0 && pluralName.length > 0) {
            sendCommand("points setname single " + singleName);
            sendCommand("points setname multiple " + pluralName);
            setTimeout(function() { doQuery(); }, 500);
        }
    }

    /**
     * @function clearPointName
     */
    function clearPointName() {
        sendCommand("points setname delete");
        setTimeout(function() { doQuery(); }, 500);
    }

    /**
     * @function setPointGain
     * @param {String} action
     */
    function setPointGain(action) {
        var value = $("#setPointGainInput_" + action).val();
        if (value.length > 0) {
            $("#setPointGainInput_" + action).val('');
            sendCommand("points " + action + " " + value);
            setTimeout(function() { doQuery(); }, 500);
        }
    }
 
    /**
     * @function modifyUserPoints
     * @param {String} action
     */
    function modifyUserPoints(action) {
        var username = $("#adjustUserPointsNameInput").val(),
            points = $("#adjustUserPointsInput").val();

        if (username.length > 0 && points.length > 0) {
            sendCommand("points " + action + " "  + username + " " + points);
            $("#adjustUserPointsNameInput").val('');
            $("#adjustUserPointsInput").val('');
            setTimeout(function() { doQuery(); }, 500);
        }
    }

    /**
     * @function giftChatPoints
     * @param {String} action
     */
    function giftChatPoints(action) {
        var points = $("#giftChatPointsInput").val(),
            command = "";

        if (points.length > 0) {
            if (action.localeCompare('all') == 0) {
                command = "points all " + points;
            }
            if (action.localeCompare('makeitrain') == 0) {
                command = "makeitrain " + points;
            }
            $("#giftChatPointsInput").val('');
            sendCommand(command);
        }
    }

    /**
     * @function setPointsSort
     * @param {String} type
     */
    function setPointsSort(type) {
        sortType = type;
        doQuery();
    }

    // Import the HTML file for this panel.
    $("#pointsPanel").load("/panel/points.html");

    // Load the DB items for this panel, wait to ensure that we are connected.
    var interval = setInterval(function() {
        var active = $("#tabs").tabs("option", "active");
        if (active == 7 && isConnected) {
            doQuery();
            clearInterval(interval); 
        }
    }, 200);

    // Query the DB every 30 seconds for updates.
    setInterval(function() {
        var active = $("#tabs").tabs("option", "active");
        if (active == 7 && isConnected) {
            newPanelAlert('Refreshing Time Data', 'success', 1000);
            doQuery();
        }
    }, 3e4);

    // Export functions - Needed when calling from HTML.
    $.pointsOnMessage = onMessage;
    $.setPointName = setPointName;
    $.clearPointName = clearPointName;
    $.setPointGain = setPointGain;
    $.giftChatPoints = giftChatPoints;
    $.modifyUserPoints = modifyUserPoints;
    $.updateUserPoints = updateUserPoints;
    $.setPointsSort = setPointsSort;
})();
